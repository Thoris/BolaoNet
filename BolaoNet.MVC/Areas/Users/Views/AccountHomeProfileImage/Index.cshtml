@model BolaoNet.MVC.ViewModels.Users.AccountHomeProfileImage

@{
    ViewBag.Title = "Atualização de Foto do Perfil";
}
@section header
{
    <link href="~/content/css/jquery.Jcrop.min.css" rel="stylesheet" />
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-8">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h3>Carregamento de Foto</h3>
                </div>
                <div class="ibox-content" style="display: block;">
                    <div class="row">                        

                        <div class="col-md-12">
                            <div>
                                @Html.TextBoxFor(m => m.AttachedFile, new { type = "file", @class = "file-uploading" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <br />                                                            
                            @Html.ActionLink("Capturar Foto", "#", new { name="capturarFoto", id="capturarFoto" }, new { @data_toggle = "modal", @data_target = "#DialogWebCam", @data_backdrop="static", @data_keyboard="false", @onclick = "startWebcam();" })
                           
                        </div>

                    </div>                    
                    <div class="row">
                        <div class="col-md-12">
                            <div id="views"></div>
                        </div>
                    </div>


                    @if(!string.IsNullOrEmpty(Model.TempUploadedFile))
                    { 
                        <br/>
                        <div class="row">
                            <div class="col-lg-2 right">
                                <a href="#" id="hl-crop-image" class="btn btn-default">Recortar</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h3>Atualização</h3>
                </div>
                <div class="ibox-content" style="display: block;">
                    <div class="row">

                        <div class="col-md-12">
                            <canvas id="target" style="width: 200px; height: 200px; overflow: hidden"></canvas>
                        </div>
                        <br />
                        <div>
                            @using (Html.BeginForm("Salvar", "AccountHomeProfileImage", FormMethod.Post,
                                new { }))
                            {
                                @Html.HiddenFor(x => x.UserName)
                                @Html.HiddenFor(x => x.TempCropFile)
                                @Html.HiddenFor(x => x.TempUploadedFile)
                                <input type="button" onclick="javascript:showWait();" class="btn btn-primary btn-sm center-block" name="Salvar" id="Salvar" value="Salvar" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


@Html.Partial("CaptureCam", Model)

@section scripts{
    @Scripts.Render("~/bundles/jcrop")

    @*<script type="text/javascript">

        function ShowPopUp() {

            window.open('/Users/AccountHomeProfileImage/CaptureCam/', "wndPopUp", 'width=720,height=400,left=100,top=100,resizable=no');

        }

    </script>*@







    <script type="text/javascript">

        var crop_max_width = 500;
        var crop_max_height = 500;
        var jcrop_api;
        var canvas;
        var context;
        var image;

        jQuery(function($){
            
            var jcrop_api,
                boundx,
                boundy;


            var canvasTarget = $("#target")[0];
            var contextTarget = canvasTarget.getContext("2d");

            $("#AttachedFile").change(function () {
                loadImage(this);
            });



            function loadImage(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    canvas = null;
                    reader.onload = function (e) {
                        image = new Image();
                        image.onload = validateImage;
                        image.src = e.target.result;
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            function validateImage() {
                if (canvas != null) {
                    image = new Image();
                    image.onload = restartJcrop;
                    image.src = canvas.toDataURL('image/png');
                } else restartJcrop();
            }


            function restartJcrop() {
                
                if (jcrop_api != null) {
                    jcrop_api.destroy();
                }
                $("#views").empty();
                $("#views").append("<canvas id=\"canvas\">");
                canvas = $("#canvas")[0];
                context = canvas.getContext("2d");
                canvas.width = image.width;
                canvas.height = image.height;
                context.drawImage(image, 0, 0);
                $("#canvas").Jcrop({
                    onChange: selectcanvas,
                    onSelect: selectcanvas,
                    boxWidth: crop_max_width,
                    boxHeight: crop_max_height,
                    aspectRatio: 1,
                    setSelect: [10, 100, 100, 100],
                }, function () {
                    jcrop_api = this;
                });
            }

            function selectcanvas(c) {
               
                if (parseInt(c.w) > 0) {                 
                    canvasTarget.width = Math.round(c.w);
                    canvasTarget.height = Math.round(c.h);
                    contextTarget.drawImage(image, Math.round(c.x), Math.round(c.y), Math.round(c.w), Math.round(c.h),
                        0, 0, canvasTarget.width, canvasTarget.height);
                }
            }

            $("#Salvar").click(function () {

                salvar();
            });

            function salvar() {

                //if (imageCropWidth == 0 && imageCropHeight == 0) {
                //    alert("Por favor, selecione uma área da figura para recortar.");
                //    return;
                //}

                var data = canvasTarget.toDataURL();


                $.ajax({
                    url: '/Users/AccountHomeProfileImage/Salvar',
                    type: 'POST',
                    data: {
                        imageData: data
                    },
                    success: function (result) {
                        refreshProfileImage(); 
                        window.location.href = "/Users/AccountHome/Index";
                    },
                    error: function (result) {
                        alert('Error: ' + err.name + ' - ' + result);
                    }
                });
            }


            $("#btnSave").click(function () {

                var canvasWebCam = document.getElementById("canvasWebCam");
                loadImageWebCam(canvasWebCam);

                $('#DialogWebCam').modal('hide');


                video.pause(); 
                webcamStream.getVideoTracks().forEach(function (track) {
                    track.stop();
                });
                video.src = "";
                video.src = null;
                webcamStream = null;
                 
            });

            function loadImageWebCam(input) {
                canvas = input;
                image = new Image();
                image.onload = validateImageWebCam;
                image.src = canvas.toDataURL('image/png');
            }

            function validateImageWebCam() {
                if (canvas != null) {
                    image = new Image();
                    image.onload = restartJcropWebCam;
                    image.src = canvas.toDataURL('image/png');
                } else restartJcropWebCam();
            }


            function restartJcropWebCam() {

                if (jcrop_api != null) {
                    jcrop_api.destroy();
                }
                $("#views").empty();
                $("#views").append("<canvas id=\"canvas\">");
                canvas = $("#canvas")[0];
                context = canvas.getContext("2d");
                canvas.width = image.width;
                canvas.height = image.height;
                context.drawImage(image, 0, 0);
                $("#canvas").Jcrop({
                    onChange: selectcanvas,
                    onSelect: selectcanvas,
                    boxWidth: crop_max_width,
                    boxHeight: crop_max_height,
                    aspectRatio: 1,
                    setSelect: [10, 100, 100, 100],
                }, function () {
                    jcrop_api = this;
                });
            }

        });


       

    </script>
}
