@model BolaoNet.MVC.ViewModels.Users.AccountHomeProfileImage

@using (Html.BeginForm("LoadWebCam", "AccountHomeProfileImage", FormMethod.Post, new { }))
{
<!-- Modal -->
<div class="modal fade" id="DialogWebCam" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Captura de foto</h4>
            </div>
            <div class="modal-body">
 
                @Html.HiddenFor(m => m.ImageData, new { id = "ImageData" })
                <div class="form-group row center-block text-center">
                    <div id="CameraView" class="col-sm-12">
                        <video id="video" width="320" height="240" autoplay></video>
                        <p />
                        <button id="btnTakePhoto" onclick="takePhoto()" class="btn btn-default">
                            <span class="glyphicon glyphicon-camera"></span> Tirar Foto
                        </button>
                        <p />
                    </div>

                    <div id="PhotoView" class="col-sm-12">
                        <canvas id="canvasWebCam" width="320" height="240"></canvas>
                        <p />
                        <button id="btnRetakePhoto" onclick="retakePhoto()" class="btn btn-default">
                            <span class="glyphicon glyphicon-repeat"></span> Repetir
                        </button>
                         
                        <button id="btnSave" type="submit" name="btnSave" class="btn btn-primary">
                            <span class="glyphicon glyphicon-save"></span> Salvar
                        </button>

                        <p />
                    </div>
                </div>
 
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" onclick="stopWebcam();">Cancelar</button>
            </div>
        </div>

    </div>
</div>
}

<script>

    
    $(function () {

        // different browsers provide getUserMedia() in differnt ways, so we need to consolidate
        navigator.getUserMedia = navigator.getUserMedia ||
                                navigator.webkitGetUserMedia ||
                                navigator.mozGetUserMedia ||
                                navigator.msGetUserMedia;

        $('#capturarFoto').attr('disabled', true);

    });
     
    var canvasWebCam, context, video, videoObj, webcamStream;

    
    function startWebcam() {

        
        $('#btnSave').attr("disabled", true);
        $("#PhotoView").hide();
        $("#CameraView").show();

        canvasWebCam = document.getElementById("canvasWebCam");
        context = canvasWebCam.getContext("2d");
        video = document.getElementById("video");



        // different browsers provide getUserMedia() in differnt ways, so we need to consolidate
        navigator.getUserMedia = navigator.getUserMedia ||
                                navigator.webkitGetUserMedia ||
                                navigator.mozGetUserMedia ||
                                navigator.msGetUserMedia;

        if (navigator.getUserMedia) {
            navigator.getUserMedia
            (
                {
                    video: {
                        width: { min: 320, ideal: 320, max: 320 },
                        height: { min: 240, ideal: 240, max: 240 }
                    },
                    audio: false
                }, // which media

                function (stream)   // success function
                {
                    video.src = window.URL.createObjectURL(stream);
                    webcamStream = stream;
                    video.onloadedmetadata = function (e) {
                        video.play();
                    };
                },
                function (err) {  // error function
                    //console.log("The following error occured: " + err.name);

                    $('#capturarFoto').attr('disabled', true);

                    @*$.ajax({
                        type: "POST",
                        url: "/Capture/CheckFailToCapturePhoto/",
                        data: { error: err.name },
                        crossDomain: true,
                        success: function (result) {
                            //window.location.href = "@Url.Content("~/Capture/FailToCapturePhoto/")";
                            window.location.href = result;
                        },
                        error: function (result) {
                            alert('Error: ' + err.name + ' - ' + result);
                        }
                    });*@
                }
            );
        }
        else {
            //window.location = "@Url.Content("~/Capture/FailToLoadDriver")/";
            $('#capturarFoto').attr('disabled', true);

        }
    };
    
    function stopWebcam() {        
        video.pause();
        webcamStream.getVideoTracks()[0].stop();
        video.src = "";
        video.src = null;
        webcamStream = null;

    }

    function retakePhoto() {

        $("#PhotoView").hide();
        $("#CameraView").show();
        $('#btnSave').attr("disabled", true);
    }

    function takePhoto() {

        $("#PhotoView").show();
        $("#CameraView").hide();

        $('#btnSave').attr("disabled", false);

        var canvasWebCam = document.getElementById('video');
        var width = canvasWebCam.width;
        var height = canvasWebCam.height;

        context.drawImage(video, 0, 0, width, height);

    } 
    jQuery(function ($) {



    });


    function showWait() {
        $('#myPleaseWait').modal('show');
    }
</script>