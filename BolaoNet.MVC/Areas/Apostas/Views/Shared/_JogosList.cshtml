@model BolaoNet.MVC.ViewModels.Apostas.ApostasJogosListViewModel


@{
    string currentGrupo = "";
    string currentFase = "";
    bool isGrouped = false;
}

<table class="table table-hover">
    <tbody>
        
        @for (int c = 0; c < Model.Apostas.Count; c++)
        {
            @Html.HiddenFor(x => x.Apostas[c].NomeCampeonato)
            @Html.HiddenFor(x => x.Apostas[c].JogoId)

            isGrouped = false;
            if (string.Compare(Model.Apostas[c].NomeGrupo, currentGrupo, true) != 0)
            {
                if (!string.IsNullOrEmpty(Model.Apostas[c].NomeGrupo.Trim()))
                {
                    <tr>
                        <th scope="rowgroup" colspan="12">Grupo @(Model.Apostas[c].NomeGrupo)</th>
                    </tr>
                    isGrouped = true;
                }
                currentGrupo = Model.Apostas[c].NomeGrupo;
            }
            if (!isGrouped && string.IsNullOrEmpty(Model.Apostas[c].NomeGrupo.Trim()) &&
                string.Compare(Model.Apostas[c].NomeFase, currentFase, true) != 0)
            {                
                <tr>
                    <th scope="rowgroup" colspan="12">Fase @(Model.Apostas[c].NomeFase)</th>
                </tr>
                currentFase = Model.Apostas[c].NomeFase;
            }
            @*<tr class="active">*@
            <tr
                @if (Model.Apostas[c].IsLocked)
                {
                    @Html.Raw("class=\"info\"");
                }
                else if (Model.Apostas[c].SalvarApostaTime1 == null || Model.Apostas[c].SalvarApostaTime2 == null)
                {
                     @Html.Raw("class=\"warning\"");
                }                
                else
                {
                    @*@Html.Raw("class=\"success\"");*@
                    @Html.Raw("class=\"active\"");
                }    
            >

        <th scope="row">@(Model.Apostas[c].JogoId)</th>
        <td>@(Model.Apostas[c].DataJogo.ToString("dd/MM/yy HH:mm"))</td>
        <td>@(Model.Apostas[c].NomeEstadio)</td>
        <td class="text-right">@(Model.Apostas[c].NomeTime1)</td>
        <td><img src="@(Model.Apostas[c].ImageTime1)" /></td>

        @if (Model.Apostas[c].IsLocked)
        {
            if (Model.Apostas[c].ApostaTime1 != null)
            {
                <td>@(Model.Apostas[c].ApostaTime1)</td>
            }
            else
            {
                <td>-</td>
            }
        }
        else
        {
            <td>
                @Html.TextBoxFor(x => x.Apostas[c].SalvarApostaTime1,
                            new { @maxlenght = "2", style = "width: 40px", @class = "form-control input-sm" })
            </td>
        }
        @Html.HiddenFor(x => x.Apostas[c].ApostaTime1)
        <td>x</td>
        @Html.HiddenFor(x => x.Apostas[c].ApostaTime2)
        @if (Model.Apostas[c].IsLocked)
        {
            if (Model.Apostas[c].ApostaTime2 != null)
            {
                <td>@(Model.Apostas[c].ApostaTime2)</td>
            }
            else
            {
                <td>-</td>
            }
        }
        else
        {
            <td>
                @Html.TextBoxFor(x => x.Apostas[c].SalvarApostaTime2,
                            new { @maxlenght = "2", style = "width: 40px", @class = "form-control input-sm" })
            </td>
        }

        <td><img src="@(Model.Apostas[c].ImageTime2)" /></td>
        <td class="text-left">@(Model.Apostas[c].NomeTime2)</td>
        <td>
            @if (Model.Apostas[c].Automatico == 1)
            {
                <span class="glyphicon glyphicon-flash" />
            }
        </td>
        <td>@(Model.Apostas[c].DataAposta)</td>
    </tr>
        }      
    </tbody>
</table>