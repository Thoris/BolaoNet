@model BolaoNet.MVC.ViewModels.Account.RegistrationUserViewModel
<div class="gray-bg">
    <div id="wrapper">
        <div class="wrapper wrapper-content animated fadeInRight">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ibox float-e-margins">
                        <div class="ibox-title">
                            <h2 class="font-bold blue">Formulário de Cadastro</h2>
                        </div>
                        <div class="ibox-content" style="display: block;">
                            <div class="row">
                                @using (Html.BeginForm("RegistrationForm", "Account", FormMethod.Post, new { }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="col-md-12 col-sm-12">

                                        <div class="form-group col-md-4 col-sm-4">
                                            @Html.LabelFor(a => a.UserName)
                                            @Html.TextBoxFor(a => a.UserName, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.UserName)
                                        </div>
                                        <div class="form-group col-md-8 col-sm-8">
                                            @Html.LabelFor(a => a.FullName)
                                            @Html.TextBoxFor(a => a.FullName, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.FullName)
                                        </div>

                                        <div class="form-group col-md-4 col-sm-4">
                                            @Html.LabelFor(a => a.Male)
                                            @Html.DropDownListFor(model => model.Male, new SelectList(
                                          new List<Object>{
                                               new { value = true , text = "Masculino"  },
                                               new { value = false , text = "Feminino" }
                                            }, "value", "text", 0), "- Selecione -", new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.Male)
                                        </div>
                                        <div class="form-group col-md-4 col-sm-4">
                                            @Html.LabelFor(a => a.BirthDate)
                                            @Html.EditorFor(a => a.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(m => m.BirthDate)
                                        </div>
                                        <div class="form-group col-md-4 col-sm-4">
                                            @Html.LabelFor(a => a.PhoneNumber)
                                            @Html.TextBoxFor(a => a.PhoneNumber, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.PhoneNumber)
                                        </div>

                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.LabelFor(a => a.Email)
                                            @Html.TextBoxFor(a => a.Email, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.Email)

                                        </div>
                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.LabelFor(a => a.ConfirmacaoEmail)
                                            @Html.TextBoxFor(a => a.ConfirmacaoEmail, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.ConfirmacaoEmail)
                                        </div>

                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.LabelFor(a => a.Password)
                                            @Html.PasswordFor(a => a.Password, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.Password)
                                        </div>
                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.LabelFor(a => a.ConfirmPassword)
                                            @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control input-sm", @placeholder = "" })
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-sm-12" id="deceased">

                                        <p class="help-block">Para ativar este serviço, leia atentamente as                                             
                                            @Html.ActionLink("regras", "#", new { }, new { @data_toggle = "modal", @data_target = "#DialogRegras" })                                            
                                            de uso.</p>

                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.CheckBoxFor(a => a.ConcordoTermos, new { }) @Html.DisplayNameFor(x => x.ConcordoTermos)
                                            @Html.ValidationMessageFor(m => m.ConcordoTermos)
                                        </div>

                                        <div class="form-group col-md-6 col-sm-6">
                                            @Html.CheckBoxFor(a => a.ReceiveEmails, new { }) @Html.DisplayNameFor(x => x.ReceiveEmails)
                                            @Html.ValidationMessageFor(m => m.ReceiveEmails)
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-sm-12">
                                        <div class="login-erro">
                                            @Html.ValidationSummary(true)
                                        </div>
                                        <div class="col-sm-offset-4 col-md-4 col-sm-4 centered-text">
                                            <input type="submit" class="btn btn-lg btn-success btn-block" value="Salvar" />
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_RegistrationRegras")

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
